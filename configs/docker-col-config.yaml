# This config file will be used by the KM-Agent on it's first initialization in docker mode.

receivers:
  docker_stats:
    endpoint: "unix:///var/run/docker.sock"
    collection_interval: 30s
    timeout: 10s
    metrics: # Fine-tune which specific docker stats metrics are enabled (defaults are usually good)
      container.cpu.utilization:
        enabled: true
      container.memory.usage.total:
        enabled: true
      container.memory.percent:
        enabled: true
      container.network.io.usage.tx_bytes:
        enabled: true
      container.network.io.usage.rx_bytes:
        enabled: true

  hostmetrics:
    root_path: /hostfs
    collection_interval: 30s
    scrapers:
      cpu:
      memory:
      disk:
      network:
      filesystem:
        include_fs_types:
          match_type: strict
          fs_types: [ext4, btrfs, xfs, tmpfs, devtmpfs]
      load:
  otlp:
    protocols:
      grpc:
      http:

exporters:
  otlphttp:
    sending_queue:
      enabled: true
      num_consumers: 10 # Increase to process more items in parallel
      queue_size: 10000 # Increase queue size to handle bursts
    endpoint: ${env:KM_COLLECTOR_ENDPOINT}
    headers:
      Authorization: ${env:KM_API_KEY}

processors:
  batch:
    send_batch_size: 10000
    timeout: 30s
  resourcedetection:
    detectors: [env, system]
    system:
      resource_attributes:
        host.name:
          enabled: true
        host.id:
          enabled: true
        os.type:
          enabled: false
  resource:
    attributes:
      - key: service.name
        action: insert
        from_attribute: host.name

extensions:
# zpages:
#   endpoint: :55679

service:
  # extensions: [zpages]
  pipelines:
    metrics:
      receivers: [hostmetrics, docker_stats]
      processors: [resourcedetection, resource, batch]
      exporters: [otlphttp]
    logs:
      receivers: []
      processors: [resourcedetection, resource, batch]
      exporters: [otlphttp]